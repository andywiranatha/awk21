# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1I3O7tpKiDQSrxDgxSis3l7_gv7bfPPAk
"""

from google.colab import files
uploaded = files.upload()

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from scipy.stats import norm

IrisData = pd.read_csv("listings.csv")
print(IrisData.dtypes)
print(IrisData.isna().values.any())

newIrisDataCont = IrisData[["latitude", "longitude", "price", "number_of_reviews", "reviews_per_month", "calculated_host_listings_count", "availability_365"]].fillna(0).astype(int)
newIrisDataDisc = IrisData[["minimum_nights"]].astype(int)

newIrisDataCont.hist()
newIrisDataDisc.hist()

plt.rcParams["figure.figsize"] = [16,9]
plt.subplots_adjust(hspace = 1, wspace = 1)
plt.show()

newIrisDataDisc.hist(bins = 20, density = True)

latitude = IrisData['latitude'].tolist()

sLatitude = np.std(latitude)
mLatitude = np.mean(latitude)

distributeLatitude = norm(mLatitude, sLatitude)

minLatitude = min(latitude)
maxLatitude = max(latitude)

valueLatitude = list(range(int(minLatitude), int(maxLatitude)))

probabilityLatitude = [distributeLatitude.pdf(valat) for valat in valueLatitude]

plt.hist(latitude, density = True)
plt.plot(valueLatitude, probabilityLatitude)

longitude = IrisData['longitude'].tolist()

sLongitude = np.std(longitude)
mLongitude = np.mean(longitude)

distributeLongitude = norm(mLongitude, sLongitude)

minLongitude = min(longitude)
maxLongitude = max(longitude)

valueLongitude = list(range(int(minLongitude), int(maxLongitude)))

probabilityLongitude = [distributeLongitude.pdf(valong) for valong in valueLongitude]

plt.hist(longitude, density = True)
plt.plot(valueLongitude, probabilityLongitude)

price = IrisData['price'].tolist()

sPrice = np.std(price)
mPrice = np.mean(price)

distributePrice = norm(mPrice, sPrice)

minPrice = min(price)
maxPrice = max(price)

valuePrice = list(range(int(minPrice), int(maxPrice)))

probabilityPrice = [distributePrice.pdf(vapri) for vapri in valuePrice]

plt.hist(price, density = True)
plt.plot(valuePrice, probabilityPrice)

nor = IrisData['number_of_reviews'].tolist()

sNor = np.std(nor)
mNor = np.mean(nor)

distributeNor = norm(mNor, sNor)

minNor = min(nor)
maxNor = max(nor)

valueNor = list(range(int(minNor), int(maxNor)))

probabilityNor = [distributeNor.pdf(vanor) for vanor in valueNor]

plt.hist(nor, density = True)
plt.plot(valueNor, probabilityNor)

rpm = IrisData['reviews_per_month'].tolist()

sRpm = np.std(rpm)
mRpm = np.mean(rpm)

distributeRpm = norm(mRpm, sRpm)

minRpm = min(rpm)
maxRpm = max(rpm)

valueRpm = list(range(int(minRpm), int(maxRpm)))

probabilityRpm = [distributeRpm.pdf(varpm) for varpm in valueRpm]

plt.hist(rpm, density = True)
plt.plot(valueRpm, probabilityRpm)

chlc = IrisData['calculated_host_listings_count'].tolist()

sChlc = np.std(chlc)
mChlc = np.mean(chlc)

distributeChlc = norm(mChlc, sChlc)

minChlc = min(chlc)
maxChlc = max(chlc)

valueChlc = list(range(int(minChlc), int(maxChlc)))

probabilityChlc = [distributeChlc.pdf(vachlc) for vachlc in valueChlc]

plt.hist(chlc, density = True)
plt.plot(valueChlc, probabilityChlc)

a365 = IrisData['availability_365'].tolist()

sA365 = np.std(a365)
mA365 = np.mean(a365)

distributeA365 = norm(mA365, sA365)

minA365 = min(a365)
maxA365 = max(a365)

valueA365 = list(range(int(minA365), int(maxA365)))

probabilityA365 = [distributeA365.pdf(vaa365) for vaa365 in valueA365]

plt.hist(a365, density = True)
plt.plot(valueA365, probabilityA365)